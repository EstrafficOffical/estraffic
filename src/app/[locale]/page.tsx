// src/app/[locale]/page.tsx
import Link from "next/link";
import { auth } from "@/lib/auth";
import { prisma } from "@/lib/prisma";
import AuthedHomeHeader from "@/app/components/AuthedHomeHeader";

export const dynamic = "force-dynamic"; // –≤–∞–∂–Ω–æ –¥–ª—è —É—á—ë—Ç–∞ —Å–µ—Å—Å–∏–∏ –Ω–∞ Vercel

function HeroStar() {
  return (
    <svg
      className="pointer-events-none absolute right-[-10%] top-[-10%] w-[40%] opacity-80"
      viewBox="0 0 400 400"
      aria-hidden
    >
      <defs>
        <linearGradient id="est-star" x1="0" y1="0" x2="1" y2="1">
          <stop offset="0%" stopColor="#ffffff" stopOpacity="0.14" />
          <stop offset="100%" stopColor="#ffffff" stopOpacity="0.04" />
        </linearGradient>
      </defs>
      <path
        d="M200 20l-38 118H40l98 70-38 118 100-70 100 70-38-118 98-70H238z"
        fill="url(#est-star)"
      />
    </svg>
  );
}

function fmtMoney(n: number | null | undefined, currency = "USD") {
  const v = Number(n || 0);
  try {
    return new Intl.NumberFormat("ru-RU", { style: "currency", currency }).format(v);
  } catch {
    return `$${v.toFixed(2)}`;
  }
}

function fmtInt(n: number | null | undefined) {
  return new Intl.NumberFormat("ru-RU").format(n || 0);
}

export default async function HomePage({
  params: { locale },
}: {
  params: { locale: string };
}) {
  const session = await auth();

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –ì–û–°–¢–¨: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –≥–ª–∞–≤–Ω–∞—è
  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  if (!session) {
    return (
      <main className="relative mx-auto max-w-7xl px-4 py-8 text-white">
        {/* —à–∞–ø–∫–∞-CTA */}
        <section className="relative overflow-hidden rounded-2xl border border-white/15 bg-white/5 px-6 py-10 backdrop-blur-md">
          <HeroStar />
          <div className="relative z-10 max-w-2xl">
            <h1 className="text-4xl font-extrabold leading-tight md:text-5xl">
              –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞—Ñ—Ñ–∏–ª–∏–∞—Ç–æ–≤: –∫–ª–∏–∫–∏, –∫–æ–Ω–≤–µ—Ä—Å–∏–∏, –≤—ã–ø–ª–∞—Ç—ã ‚Äî –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ
            </h1>
            <p className="mt-3 text-white/70">
              –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Ç—Ä–∞—Ñ–∏–∫ –∏ –¥–æ—Ö–æ–¥, –ø–æ–¥–∞–≤–∞–π—Ç–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ñ—Ñ–µ—Ä—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤—ã–ø–ª–∞—Ç—ã.
              –ß–∏—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –ø–æ–Ω—è—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –±—ã—Å—Ç—Ä—ã–π —Å–∞–ø–ø–æ—Ä—Ç.
            </p>
            <div className="mt-6 flex flex-wrap gap-3">
              <Link
                href={`/${locale}/register`}
                className="rounded-xl border border-rose-500/40 bg-rose-500/90 px-5 py-2.5 text-sm font-semibold text-white hover:bg-rose-500"
              >
                –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </Link>
              <Link
                href={`/${locale}/login`}
                className="rounded-xl border border-white/15 bg-white/10 px-5 py-2.5 text-sm hover:bg-white/15"
              >
                –í–æ–π—Ç–∏
              </Link>
            </div>
          </div>
        </section>

        {/* –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
        <section className="mt-8 grid grid-cols-1 gap-4 sm:grid-cols-3">
          <div className="rounded-2xl border border-white/15 bg-white/5 p-4 backdrop-blur-md">
            <div className="text-sm text-white/70">–û—Ñ—Ñ–µ—Ä—ã</div>
            <div className="mt-1 text-lg font-semibold">–î–æ—Å—Ç—É–ø –ø–æ –∑–∞–ø—Ä–æ—Å—É</div>
            <p className="mt-2 text-sm text-white/60">
              –í—ã–±–∏—Ä–∞–π—Ç–µ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏ –≥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞—è–≤–∫—É –∏ —Ä–∞–±–æ—Ç–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ —Å —Ç–µ–º,
              —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç.
            </p>
          </div>
          <div className="rounded-2xl border border-white/15 bg-white/5 p-4 backdrop-blur-md">
            <div className="text-sm text-white/70">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
            <div className="mt-1 text-lg font-semibold">–ö–ª–∏–∫–∏, –∫–æ–Ω–≤–µ—Ä—Å–∏–∏, –≤—ã—Ä—É—á–∫–∞</div>
            <p className="mt-2 text-sm text-white/60">
              –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å–µ—Ä–∏–∏, EPC –∏ CR –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –∏ –æ—Ñ—Ñ–µ—Ä–∞–º ‚Äî –≤—Å—ë –Ω–∞–≥–ª—è–¥–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ.
            </p>
          </div>
          <div className="rounded-2xl border border-white/15 bg-white/5 p-4 backdrop-blur-md">
            <div className="text-sm text-white/70">–í—ã–ø–ª–∞—Ç—ã</div>
            <div className="mt-1 text-lg font-semibold">–ö–æ—à–µ–ª—å–∫–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è</div>
            <p className="mt-2 text-sm text-white/60">
              –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤, –æ—Ç–º–µ—Ç–∫–∞ primary –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤—ã–ø–ª–∞—Ç.
            </p>
          </div>
        </section>

        {/* —à–∞–≥–∏ */}
        <section className="mt-8 rounded-2xl border border-white/15 bg-white/5 p-6 backdrop-blur-md">
          <h2 className="text-xl font-semibold">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h2>
          <div className="mt-4 grid grid-cols-1 gap-4 sm:grid-cols-3">
            <div className="rounded-xl border border-white/10 bg-black/20 p-4">
              <div className="text-sm font-medium">1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</div>
              <p className="mt-1 text-sm text-white/60">–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.</p>
            </div>
            <div className="rounded-xl border border-white/10 bg-black/20 p-4">
              <div className="text-sm font-medium">2. –î–æ—Å—Ç—É–ø –∫ –æ—Ñ—Ñ–µ—Ä–∞–º</div>
              <p className="mt-1 text-sm text-white/60">–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞—á–Ω–∏—Ç–µ –ª–∏—Ç—å —Ç—Ä–∞—Ñ–∏–∫.</p>
            </div>
            <div className="rounded-xl border border-white/10 bg-black/20 p-4">
              <div className="text-sm font-medium">3. –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –≤—ã–ø–ª–∞—Ç—ã</div>
              <p className="mt-1 text-sm text-white/60">–°–ª–µ–¥–∏—Ç–µ –∑–∞ KPI –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤—ã–ø–ª–∞—Ç—ã.</p>
            </div>
          </div>
        </section>
      </main>
    );
  }

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  // –ê–í–¢–û–†–ò–ó–û–í–ê–ù–ù–´–ô: —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  const userId = session.user.id;

  // –≥—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä–∏–æ–¥–æ–≤ (UTC)
  const now = new Date();
  const startOfToday = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()));
  const start7 = new Date(now);
  start7.setUTCDate(start7.getUTCDate() - 7);
  const start30 = new Date(now);
  start30.setUTCDate(start30.getUTCDate() - 30);

  const [
    clicksToday,
    convsToday,
    revenueTodayAgg,
    revenue7Agg,
    revenue30Agg,
    latestPayout,
    topOffersGroup,
    recentOffers,
  ] = await Promise.all([
    prisma.click.count({ where: { userId, createdAt: { gte: startOfToday } } }),
    prisma.conversion.count({ where: { userId, createdAt: { gte: startOfToday } } }),
    prisma.conversion.aggregate({
      where: { userId, createdAt: { gte: startOfToday } },
      _sum: { amount: true },
    }),
    prisma.conversion.aggregate({
      where: { userId, createdAt: { gte: start7 } },
      _sum: { amount: true },
    }),
    prisma.conversion.aggregate({
      where: { userId, createdAt: { gte: start30 } },
      _sum: { amount: true },
    }),
    prisma.payout.findFirst({ where: { userId }, orderBy: { createdAt: "desc" } }),
    prisma.conversion.groupBy({
      by: ["offerId"],
      where: { userId, createdAt: { gte: start30 } },
      _sum: { amount: true },
      orderBy: { _sum: { amount: "desc" } },
      take: 5,
    }),
    prisma.offer.findMany({
      orderBy: { createdAt: "desc" },
      take: 3,
      select: { id: true, title: true, vertical: true, geo: true },
    }),
  ]);

  const offerIds = topOffersGroup.map((g) => g.offerId);
  const offerMap = offerIds.length
    ? Object.fromEntries(
        (
          await prisma.offer.findMany({
            where: { id: { in: offerIds } },
            select: { id: true, title: true, vertical: true, geo: true },
          })
        ).map((o) => [o.id, o])
      )
    : {};

  const revenueToday = Number(revenueTodayAgg._sum.amount || 0);
  const revenue7 = Number(revenue7Agg._sum.amount || 0);
  const revenue30 = Number(revenue30Agg._sum.amount || 0);

  return (
    <main className="mx-auto w-full max-w-7xl px-4 py-8 text-white/90">
      {/* –≤—ã–¥–≤–∏–∂–Ω–æ–µ –º–µ–Ω—é / —Ö–µ–¥–µ—Ä –¥–ª—è –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö */}
      <AuthedHomeHeader
        locale={locale}
        displayName={session.user.name || (session.user.email ?? "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")}
      />

      {/* –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <section className="rounded-2xl border border-white/12 bg-white/5 p-6 shadow-[0_8px_40px_rgba(0,0,0,.45)]">
        <div className="flex flex-col items-start justify-between gap-4 md:flex-row md:items-center">
          <div>
            <h1 className="text-3xl font-extrabold">
              –ü—Ä–∏–≤–µ—Ç, {session.user.name || session.user.email} üëã
            </h1>
            <p className="mt-1 text-white/70">–í–∞—à –±—ã—Å—Ç—Ä—ã–π –æ–±–∑–æ—Ä –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä—ã.</p>
          </div>
          <div className="flex flex-wrap gap-3">
            <Link
              href={`/${locale}/offers`}
              className="rounded-2xl border-2 border-rose-500/80 px-5 py-2 font-semibold text-white shadow-[0_0_0_2px_rgba(255,0,90,.25),0_0_18px_rgba(255,0,90,.45)] hover:bg-rose-500/10"
            >
              –ö–∞—Ç–∞–ª–æ–≥ –æ—Ñ—Ñ–µ—Ä–æ–≤
            </Link>
            <Link
              href={`/${locale}/profile`}
              className="rounded-2xl border-2 border-slate-300/70 px-5 py-2 font-semibold text-white/90 shadow-[0_0_0_2px_rgba(148,163,184,.25),0_0_18px_rgba(148,163,184,.45)] hover:bg-white/10"
            >
              –ü—Ä–æ—Ñ–∏–ª—å
            </Link>
          </div>
        </div>
      </section>

      {/* –º–µ—Ç—Ä–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è / 7 / 30 */}
      <section className="mt-8 grid grid-cols-1 gap-4 md:grid-cols-4">
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-xs uppercase tracking-wide text-white/60">–î–æ—Ö–æ–¥ —Å–µ–≥–æ–¥–Ω—è</div>
          <div className="mt-1 text-2xl font-extrabold">{fmtMoney(revenueToday)}</div>
        </div>
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-xs uppercase tracking-wide text-white/60">–ö–ª–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è</div>
          <div className="mt-1 text-2xl font-extrabold">{fmtInt(clicksToday)}</div>
        </div>
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-xs uppercase tracking-wide text-white/60">–ö–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å–µ–≥–æ–¥–Ω—è</div>
          <div className="mt-1 text-2xl font-extrabold">{fmtInt(convsToday)}</div>
        </div>
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-xs uppercase tracking-wide text-white/60">–î–æ—Ö–æ–¥ 7/30</div>
          <div className="mt-1 text-lg font-semibold">
            {fmtMoney(revenue7)} <span className="text-white/50">/</span> {fmtMoney(revenue30)}
          </div>
        </div>
      </section>

      {/* —Ç–æ–ø-–æ—Ñ—Ñ–µ—Ä—ã –∏ —Ñ–∏–Ω–∞–Ω—Å—ã */}
      <section className="mt-8 grid grid-cols-1 gap-4 md:grid-cols-3">
        {/* –¢–æ–ø –ø–æ –¥–æ—Ö–æ–¥—É */}
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-sm text-white/70">–¢–æ–ø –æ—Ñ—Ñ–µ—Ä—ã (–¥–æ—Ö–æ–¥, 30 –¥–Ω–µ–π)</div>
          <ul className="mt-3 space-y-2">
            {topOffersGroup.length === 0 && (
              <li className="text-sm text-white/60">–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–π –∑–∞ –ø–µ—Ä–∏–æ–¥.</li>
            )}
            {topOffersGroup.map((g) => {
              const o = offerMap[g.offerId];
              const title = o?.title || g.offerId;
              const meta = [o?.vertical, o?.geo].filter(Boolean).join(" ‚Ä¢ ");
              return (
                <li
                  key={g.offerId}
                  className="flex items-center justify-between gap-3 rounded-xl border border-white/10 bg-black/20 p-3"
                >
                  <div className="min-w-0">
                    <div className="truncate font-medium">{title}</div>
                    {meta && <div className="truncate text-xs text-white/60">{meta}</div>}
                  </div>
                  <div className="shrink-0 font-semibold">
                    {fmtMoney(Number(g._sum.amount || 0))}
                  </div>
                </li>
              );
            })}
          </ul>
        </div>

        {/* –ù–æ–≤—ã–µ –æ—Ñ—Ñ–µ—Ä—ã */}
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-sm text-white/70">–ù–æ–≤—ã–µ –æ—Ñ—Ñ–µ—Ä—ã</div>
          <ul className="mt-3 space-y-2">
            {recentOffers.map((o) => (
              <li
                key={o.id}
                className="flex items-center justify-between gap-3 rounded-xl border border-white/10 bg-black/20 p-3"
              >
                <div className="min-w-0">
                  <div className="truncate font-medium">{o.title}</div>
                  <div className="truncate text-xs text-white/60">
                    {[o.vertical, o.geo].filter(Boolean).join(" ‚Ä¢ ")}
                  </div>
                </div>
                <Link
                  href={`/${locale}/offers`}
                  className="rounded-xl border border-rose-500/40 bg-rose-500/90 px-3 py-1.5 text-xs font-semibold text-white hover:bg-rose-500"
                >
                  –û—Ç–∫—Ä—ã—Ç—å
                </Link>
              </li>
            ))}
            {recentOffers.length === 0 && <li className="text-sm text-white/60">–ü–æ–∫–∞ –ø—É—Å—Ç–æ.</li>}
          </ul>
        </div>

        {/* –§–∏–Ω–∞–Ω—Å—ã */}
        <div className="rounded-2xl border border-white/12 bg-white/5 p-5">
          <div className="text-sm text-white/70">–§–∏–Ω–∞–Ω—Å—ã</div>
          <div className="mt-3 rounded-xl border border-white/10 bg-black/20 p-3">
            <div className="text-xs text-white/60">–ü–æ—Å–ª–µ–¥–Ω—è—è –≤—ã–ø–ª–∞—Ç–∞</div>
            {latestPayout ? (
              <>
                <div className="mt-1 text-xl font-extrabold">
                  {fmtMoney(Number(latestPayout.amount), latestPayout.currency || "USD")}
                </div>
                <div className="text-xs text-white/60">
                  {new Date(latestPayout.createdAt).toLocaleDateString("ru-RU")} ‚Ä¢{" "}
                  {latestPayout.status}
                </div>
              </>
            ) : (
              <div className="text-sm text-white/60">–ï—â—ë –Ω–µ –±—ã–ª–æ –≤—ã–ø–ª–∞—Ç.</div>
            )}
          </div>
          <div className="mt-3 flex gap-2">
            <Link
              href={`/${locale}/profile`}
              className="rounded-xl border border-white/15 bg-white/10 px-4 py-2 text-sm hover:bg-white/15"
            >
              –†–µ–∫–≤–∏–∑–∏—Ç—ã
            </Link>
            <Link
              href={`/${locale}/offers`}
              className="rounded-xl border border-rose-500/40 bg-rose-500/90 px-4 py-2 text-sm font-semibold text-white hover:bg-rose-500"
            >
              –ö –æ—Ñ—Ñ–µ—Ä–∞–º
            </Link>
          </div>
        </div>
      </section>
    </main>
  );
}
